# This configuration is for ESPnet2 to train Transformer-TTS. Compared to the
# original paper, this configuration additionally use the guided attention
# loss to accelerate the learning of the diagonal attention. It requires
# 4 GPUs with 32 GB memory and it will finish within 1 day to finish the
# training on Tesla V100.
##########################################################
#                  ASR MODEL SETTING                     #
##########################################################
asr_encoder: conformer
asr_encoder_conf:
  output_size: 256
  attention_heads: 4
  linear_units: 1024
  num_blocks: 12
  dropout_rate: 0.1
  positional_dropout_rate: 0.1
  attention_dropout_rate: 0.1
  input_layer: conv2d
  normalize_before: true
  macaron_style: true
  rel_pos_type: latest
  pos_enc_layer_type: rel_pos
  selfattention_layer_type: rel_selfattn
  activation_type: swish
  use_cnn_module: true
  cnn_module_kernel: 31

asr_decoder: transformer
asr_decoder_conf:
  attention_heads: 4
  linear_units: 2048
  num_blocks: 6
  dropout_rate: 0.1
  positional_dropout_rate: 0.1
  self_attention_dropout_rate: 0.1
  src_attention_dropout_rate: 0.1

frontend_conf:
  n_fft: 512
  win_length: 400
  hop_length: 160
##########################################################
#                  TTS MODEL SETTING                     #
##########################################################
tts: transformer           # model architecture
tts_conf: # keyword arguments for the selected model
  embed_dim: 0           # embedding dimension in encoder prenet
  eprenet_conv_layers: 0 # number of conv layers in encoder prenet
  # if set to 0, no encoder prenet will be used
  eprenet_conv_filts: 0  # filter size of conv layers in encoder prenet
  eprenet_conv_chans: 0  # number of channels of conv layers in encoder prenet
  dprenet_layers: 2      # number of layers in decoder prenet
  dprenet_units: 128     # number of units in decoder prenet // origin: 256
  adim: 256              # attention dimension // origin 512
  aheads: 4              # number of attention heads // origin 8
  elayers: 6             # number of encoder layers
  eunits: 512           # number of encoder ff units // origin 1024
  dlayers: 6             # number of decoder layers
  dunits: 512           # number of decoder ff units // origin 1024
  positionwise_layer_type: conv1d  # type of position-wise layer
  positionwise_conv_kernel_size: 1 # kernel size of position wise conv layer
  postnet_layers: 5                # number of layers of postnset
  postnet_filts: 5                 # filter size of conv layers in postnet
  postnet_chans: 128               # number of channels of conv layers in postnet // origin 256
  use_masking: True                # whether to apply masking for padded part in loss calculation
  bce_pos_weight: 10.0             # weight of positive sample in binary cross entropy calculation // origin 5
  use_scaled_pos_enc: True         # whether to use scaled positional encoding
  encoder_normalize_before: True   # whether to perform layer normalization before the input
  decoder_normalize_before: True   # whether to perform layer normalization before the input
  reduction_factor: 1              # reduction factor
  init_type: xavier_uniform        # initialization type
  init_enc_alpha: 1.0              # initial value of alpha of encoder scaled position encoding
  init_dec_alpha: 1.0              # initial value of alpha of decoder scaled position encoding
  eprenet_dropout_rate: 0.0        # dropout rate for encoder prenet
  dprenet_dropout_rate: 0.5        # dropout rate for decoder prenet
  postnet_dropout_rate: 0.5        # dropout rate for postnet
  transformer_enc_dropout_rate: 0.1                # dropout rate for transformer encoder layer
  transformer_enc_positional_dropout_rate: 0.1     # dropout rate for transformer encoder positional encoding
  transformer_enc_attn_dropout_rate: 0.1           # dropout rate for transformer encoder attention layer
  transformer_dec_dropout_rate: 0.1                # dropout rate for transformer decoder layer
  transformer_dec_positional_dropout_rate: 0.1     # dropout rate for transformer decoder positional encoding
  transformer_dec_attn_dropout_rate: 0.1           # dropout rate for transformer decoder attention layer
  transformer_enc_dec_attn_dropout_rate: 0.1       # dropout rate for transformer encoder-decoder attention layer
  use_guided_attn_loss: true                       # whether to use guided attention loss
  num_heads_applied_guided_attn: 2                 # number of layers to apply guided attention loss
  num_layers_applied_guided_attn: 2                # number of heads to apply guided attention loss
  modules_applied_guided_attn: [ "encoder-decoder" ] # modules to apply guided attention loss
  use_md: true
  guided_attn_loss_sigma: 0.4                      # sigma in guided attention loss
  guided_attn_loss_lambda: 10.0                    # lambda in guided attention loss
  # spk_embed_dim: 256                               # x_vector // origin 512
  # spk_emded_integration_type: add                  # how to integrate speaker embedding

##########################################################
#            OPTIMIZER & SCHEDULER SETTING               #
##########################################################
optim: adam             # optimizer type
optim_conf: # keyword arguments for selected optimizer
  lr: 0.2             # learning rate
scheduler: noamlr       # scheduler type
scheduler_conf: # keyword arguments for selected scheduler
  model_size: 512     # model size, a.k.a., attention dimenstion
  warmup_steps: 8000  # the number of warmup steps
model_conf:
  mtlalpha: 0.3
  mt_weight: 0.0
  asr_weight: 0.1
  lsm_weight: 0.1
  length_normalized_loss: false
  use_unpaired: true
  intermediate_supervision: true
  gumbel_softmax: true

##########################################################
#                OTHER TRAINING SETTING                  #
##########################################################
num_iters_per_epoch: 1000   # number of iterations per epoch
max_epoch: 5                # number of epochs
grad_clip: 1.0              # gradient clipping norm
grad_noise: false           # whether to use gradient noise injection
accum_grad: 6               # gradient accumulation
batch_bins: 3000000         # batch bins (for feats_type=raw, *= n_shift / n_mels)
batch_type: numel           # how to make batch
sort_in_batch: descending   # how to sort data in making batch
sort_batch: descending      # how to sort created batches
num_workers: 1              # number of workers of data loader
train_dtype: float32        # dtype in training
log_interval: null          # log interval in iterations
keep_nbest_models: 5        # number of models to keep
num_att_plot: 3             # number of attention figures to be saved in every check
seed: 0                     # random seed number
best_model_criterion:
  - - valid
    - loss
    - min
  - - train
    - loss
    - min
init_param: [
  "/ocean/projects/cis210027p/siddhana/new_download/newer/new2/espnet/egs2/librispeech_100/tts2/exp/tts_tts_16k_char_xvector_pretrain/valid.acc_asr.ave.pth",
  "/ocean/projects/cis210027p/jtang1/espnet/egs2/librispeech_100/asr1/exp/asr_conformer_lr2e-3_warmup15k_amp_nondeterministic/valid.acc.ave.pth:encoder:asr_encoder_copy",
  "/ocean/projects/cis210027p/jtang1/espnet/egs2/librispeech_100/asr1/exp/asr_conformer_lr2e-3_warmup15k_amp_nondeterministic/valid.acc.ave.pth:ctc:ctc_copy",
]
unused_parameters: true
freeze_param: [
  "asr_decoder",
  "tts.encoder",
  "asr_encoder_copy",
  "ctc_copy",
]